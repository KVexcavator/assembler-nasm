Логический оператор NOT
Преобразование каждого 0 в 1 и каждой 1 в 0.
A =     11001011
NOT A = 00110100
--------------------------------------
Логический оператор OR
Если A или B или, A и B равны 1, то результат равен 1.
A =         11001011
B =         00011000
A OR B =    11011011
--------------------------------------
Логический оператор XOR
Исключающее ИЛИ: если A и B не равны, то результат равен 1. Если A и B  равны , то результат равен 0.
A =         11001011
B =         00011000
A XOR B =   11010011
применяют для очистки  регистра
A =         11001011
A =         11001011
A XOR A =   00000000

* xor rax, rax – это то же самое, что mov rax, 0.
* xor выполняется быстрее, чем mov

Пример смены знака для 32-битового числа с плавающей точкой:
A       = 17.0  = 0x41880000 = 01000001 10001000 00000000 00000000
B       = -0.0  = 0x80000000 = 10000000 00000000 00000000 00000000
A XOR B = -17.0 = 0xC1880000 = 11000001 10001000 00000000 00000000
* если необходимо изменить знак целого числа, то нуж­но просто вычесть его из нуля или воспользоваться инструкцией neg
---------------------------------------
Логический оператор AND
Если A и B одновременно равны 1, то результат равен 1, во всех прочих слу­чаях результат равен 0.
A =         11001011
B =         00011000
A AND B =   00001000

Проверка отдельных битоа
По результату операции(ниже) можно сделать вывод о том, что бит 6 уста­новлен (равен 1), а бит 3 не установлен (равен 0).
*считают справа, начиная с нуля
A =         11000011
B =         01001000
A AND B =   01000000

Округление чисел в меньшую сторону
address =   0x42444213 = 01000010010001000100001000010011
mask =      0xfffffff0 = 11111111111111111111111111110000
rounded =   0x42444210 = 01000010010001000100001000010000
