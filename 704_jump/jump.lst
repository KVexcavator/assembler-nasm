     1                                  ; jump.asm
     2                                  extern printf
     3                                  section .data
     4 00000000 2A00000000000000            number1 dq  42
     5 00000008 2900000000000000            number2 dq  41
     6 00000010 4E554D42455231203E-         fmt1 db "NUMBER1 > = NUMBER2",10,0
     6 00000019 203D204E554D424552-
     6 00000022 320A00             
     7 00000025 4E554D42455231203C-         fmt2 db "NUMBER1 < NUMBER2",10,0
     7 0000002E 204E554D424552320A-
     7 00000037 00                 
     8                                  section .bss
     9                                  section .text
    10                                  global main
    11                                  main:
    12 00000000 55                          push    rbp
    13 00000001 4889E5                      mov     rbp,rsp
    14 00000004 488B0425[00000000]          mov     rax, [number1]  ; Передача чисел в регистры.
    15 0000000C 488B1C25[08000000]          mov     rbx, [number2]
    16 00000014 4839D8                      cmp     rax,rbx ; Сравнение регистров rax и rbx.
    17 00000017 7D16                        jge     greater ; Если rax больше или равен, то перейти к метке greater:.
    18 00000019 48BF-                       mov     rdi,fmt2    ; Если rax меньше, продолжить здесь.
    18 0000001B [2500000000000000] 
    19 00000023 B800000000                  mov     rax,0       ; Регистр xmm не используется.
    20 00000028 E8(00000000)                call printf         ; Вывод строки fmt2.
    21 0000002D EB14                        jmp exit            ; Переход к метке exit:.
    22                                  greater:
    23 0000002F 48BF-                       mov rdi,fmt1        ; Регистр rax больше.
    23 00000031 [1000000000000000] 
    24 00000039 B800000000                  mov rax,0           ; Регистр xmm не используется.
    25 0000003E E8(00000000)                call printf         ; Вывод строки fmt1.
    26                                  exit:
    27 00000043 4889EC                      mov rsp,rbp
    28 00000046 5D                          pop rbp
    29 00000047 C3                      ret
